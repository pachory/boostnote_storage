createdAt: "2018-08-04T16:57:36.928Z"
updatedAt: "2018-08-05T11:46:27.533Z"
type: "MARKDOWN_NOTE"
folder: "e0b4874ac74b73e6fe1e"
title: "Node.js のバージョン管理方法について"
content: '''
  # Node.js のバージョン管理方法について
  
  なんかお手軽に Node のバージョン管理できる方法があったっぽいのでメモ。 
  
  ## n という Node のバージョン管理ツール
  
  [GitHub - tj/n: Node version management](https://github.com/tj/n) という便利な Node のバージョン管理ツールがあるようです。
  
  最新バージョンのインストールとか、Node.js の過去バージョンを使えるようにしてくれるっぽい。
  
  2018年8月5日時点ではまだ Windows 未対応みたいですね。
  
  ## 使い方
  
  まずはインストールします。
  
  node の管理ツールだしグローバルでいいよねってことで、オプションに `-g` つけましょう。
  
  って思ったんですけど、プロジェクト毎に Node.js のバージョン変えたいなら `-g` つけないほうがいいかもしれないですね。
  
  権限（パーミッション）まわりで怒られたら `sudo` つけて実行しましょうね。
  
  ```node
  npm install -g n
  ```
  
  インストールしたらいきなり使えます。
  
  ### Node.js の最新バージョンの確認
  
  ```node
  n --latest
  ```
  
  ### Node.js の安定稼働バージョンの確認
  
  ```node
  n --stable
  ```
  
  ### Node.js の LTS バージョンを確認
  
  ```node
  n --lts
  ```
  
  ### Node.js の最新バージョンのインストール
  
  ```node
  n latest
  ```
  
  ### Node.js の安定稼働バージョンをインストール
  
  ```node
  n stable
  ```
  
  ### Node.js の LTS バージョンをインストール
  
  ```node
  n lts
  ```
  
  ちなみに LTS ってなんだ。。。ってなったので調べたら長期サポート対象のバージョンらしいです。
  
  なので本番環境とかで使うならこのバージョンの方が安全なのかな？
  
  --stable と --lts でバージョン確認するとそれぞれ違うバージョンだったのがちょっと気になりますが。。
  
  ### Node.js の特定バージョンをインストール
  
  ```node
  n 0.8.14
  ```
  
  n コマンドの後にバージョン数指定でできるみたいですね。
  
  ### Node.js のバージョン変更
  
  ```node
  n
  ```
  
  これ叩くとインストール済みのバージョン一覧がでてくるので、ここでバージョン変更すると即座に切り替えてくれるようです。
  
  ## 最後に
  
  後で調べたら Node.js のバージョン管理の主流は nvm というものらしいですね。
  
  React.js のチュートリアルしようと思ってたら、脱線したけどこんなこと基礎中の基礎ですよね。
  
  糞雑魚プログラマだから仕方ないですね。
  
  精進します。
  
'''
tags: [
  "Node.js"
  "メモ"
]
isStarred: false
isTrashed: false
